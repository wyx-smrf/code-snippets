{
  "display_name": "3. Stratified split",
  "metadata": {
    "tags": [
      "Data Splitting"
    ],
    "description": "Split arrays or matrices into stratified train and test subsets.",
    "display_name": "3. Stratified split",
    "code": [
      "from sklearn.model_selection import StratifiedShuffleSplit",
      "",
      "# Create a categorical column of the target (y variable)",
      "df[\"y_category\"] = pd.cut(df[\"y_category\"],",
      "                          bins=[0., 1.5, 3.0, 4.5, 6., np.inf],",
      "                          labels=[1, 2, 3, 4, 5])",
      "",
      "# Optional: View the count and graph of the categorical column",
      "df[\"y_category\"].value_counts()",
      "df[\"y_category\"].hist()",
      "",
      "# Perform stratified shuffle split",
      "split = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)",
      "",
      "# Return the split data",
      "for train_index, test_index in split.split(housing, housing[\"income_cat\"]): ",
      "    # Follows the syntax of StratSS.split(X, y)",
      "    ",
      "    strat_train_set = housing.loc[train_index]",
      "    strat_test_set = housing.loc[test_index]"
    ],
    "language": "Python"
  },
  "schema_name": "code-snippet"
}